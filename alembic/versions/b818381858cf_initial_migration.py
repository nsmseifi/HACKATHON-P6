"""initial migration

Revision ID: b818381858cf
Revises: 
Create Date: 2020-06-30 17:01:46.857801

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b818381858cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_tokens',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('expiration_date', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_app_tokens')),
    sa.UniqueConstraint('id', name=op.f('app_tokens_id_key'))
    )
    op.create_table('persons',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('image', postgresql.UUID(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('cell_no', sa.String(), nullable=True),
    sa.Column('current_book_id', postgresql.UUID(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('is_legal', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_persons')),
    sa.UniqueConstraint('cell_no', name=op.f('personcells_id_key')),
    sa.UniqueConstraint('email', name=op.f('personemails_id_key')),
    sa.UniqueConstraint('id', name=op.f('persons_id_key'))
    )
    op.create_table('stores',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('image', postgresql.UUID(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('store_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_stores')),
    sa.UniqueConstraint('email', name=op.f('stores_id_key')),
    sa.UniqueConstraint('id', name=op.f('stores_id_key')),
    sa.UniqueConstraint('store_code', name=op.f('storescode_id_key'))
    )
    op.create_table('accounts',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=False),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('type', postgresql.ENUM('Main', 'Star', 'Discount', 'Postpaid', 'Prepaid', name='accounttypes'), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_accounts_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_accounts')),
    sa.UniqueConstraint('id', name=op.f('accounts_id_key'))
    )
    op.create_table('payments',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('shopping_key', sa.String(), nullable=True),
    sa.Column('reference_code', sa.String(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('order_details', sa.JSON(), nullable=True),
    sa.Column('agent', sa.String(), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_payments_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_payments')),
    sa.UniqueConstraint('id', name=op.f('payments_id_key'))
    )
    op.create_table('receipts',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('payee_id', postgresql.UUID(), nullable=False),
    sa.Column('payer_id', postgresql.UUID(), nullable=True),
    sa.Column('payer_name', sa.String(), nullable=True),
    sa.Column('body', sa.JSON(), nullable=False),
    sa.Column('total_payment', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['payee_id'], ['stores.id'], name=op.f('fk_tb_receipts_col_payee_id')),
    sa.ForeignKeyConstraint(['payer_id'], ['persons.id'], name=op.f('fk_tb_receipts_col_payer_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_receipts')),
    sa.UniqueConstraint('id', name=op.f('receipts_id_key'))
    )
    op.create_table('users',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('person_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], name=op.f('fk_tb_users_col_person_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_users')),
    sa.UniqueConstraint('id', name=op.f('users_id_key')),
    sa.UniqueConstraint('username', name=op.f('username_id_key'))
    )
    op.create_table('transactions',
    sa.Column('creation_date', sa.Integer(), nullable=False),
    sa.Column('modification_date', sa.Integer(), nullable=True),
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('creator', sa.String(), nullable=True),
    sa.Column('modifier', sa.String(), nullable=True),
    sa.Column('account_id', postgresql.UUID(), nullable=True),
    sa.Column('receipt_id', postgresql.UUID(), nullable=True),
    sa.Column('credit', sa.Float(), nullable=True),
    sa.Column('debit', sa.Float(), nullable=True),
    sa.Column('payment_id', postgresql.UUID(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_tb_transactions_col_account_id')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_tb_transactions_col_payment_id')),
    sa.ForeignKeyConstraint(['receipt_id'], ['receipts.id'], name=op.f('fk_tb_transactions_col_receipt_id')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tb_transactions')),
    sa.UniqueConstraint('id', name=op.f('transactions_id_key'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('users')
    op.drop_table('receipts')
    op.drop_table('payments')
    op.drop_table('accounts')
    op.drop_table('stores')
    op.drop_table('persons')
    op.drop_table('app_tokens')
    # ### end Alembic commands ###
